# baseURI: http://www.w3.org/ns/ssn-ext
# imports: http://spinrdf.org/spin
# imports: http://www.w3.org/2006/time
# imports: http://www.w3.org/ns/ssn/

@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix ex: <http://example.org/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .
@prefix ssn-ext: <http://www.w3.org/ns/ssn-ext/> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

sosa:Actuation
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "f" ;
              ] ;
            sp:predicate sosa:hasUltimateFeatureOfInterest ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:hasUltimateFeatureOfInterest ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "f" ;
              ] ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 sosa:hasFeatureOfInterest ;
                sp:path2 [
                    rdf:type sp:ModPath ;
                    sp:modMax -2 ;
                    sp:modMin 1 ;
                    sp:subPath sosa:isSampleOf ;
                  ] ;
              ] ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "y" ;
                    ] ;
                  sp:predicate sosa:isSampleOf ;
                  sp:subject [
                      sp:varName "f" ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
    ] ;
.
sosa:Observation
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "foi" ;
              ] ;
            sp:predicate sosa:hasFeatureOfInterest ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:hasFeatureOfInterest ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate sosa:hasMemberObservation ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "foi" ;
              ] ;
            sp:predicate sosa:hasFeatureOfInterest ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "foi" ;
              ] ;
            sp:predicate sosa:hasUltimateFeatureOfInterest ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:hasUltimateFeatureOfInterest ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "s" ;
                    ] ;
                  sp:predicate sosa:hasFeatureOfInterest ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate sosa:hasMemberObservation ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "foi" ;
              ] ;
            sp:predicate sosa:hasUltimateFeatureOfInterest ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "foi" ;
              ] ;
            sp:predicate sosa:hasUltimateFeatureOfInterest ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object sosa:Observation ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:hasUltimateFeatureOfInterest ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  rdf:type sp:TriplePath ;
                  sp:object [
                      sp:varName "foi1" ;
                    ] ;
                  sp:path [
                      rdf:type sp:SeqPath ;
                      sp:path1 sosa:hasFeatureOfInterest ;
                      sp:path2 [
                          rdf:type sp:ModPath ;
                          sp:modMax -2 ;
                          sp:modMin 0 ;
                          sp:subPath sosa:isSampleOf ;
                        ] ;
                    ] ;
                  sp:subject spin:_this ;
                ]
                [
                  rdf:type sp:NotExists ;
                  sp:elements (
                      [
                        sp:object [
                            sp:varName "y3" ;
                          ] ;
                        sp:predicate sosa:isSampleOf ;
                        sp:subject [
                            sp:varName "foi1" ;
                          ] ;
                      ]
                    ) ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object spin:_this ;
                  sp:predicate sosa:hasMemberObservation ;
                  sp:subject [
                      sp:varName "oc" ;
                    ] ;
                ]
                [
                  sp:object [
                      sp:varName "foi2" ;
                    ] ;
                  sp:predicate sosa:hasUltimateFeatureOfInterest ;
                  sp:subject [
                      sp:varName "oc" ;
                    ] ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Optional ;
            sp:elements (
                [
                  sp:object spin:_this ;
                  sp:predicate sosa:hasMemberObservation ;
                  sp:subject [
                      sp:varName "oc" ;
                    ] ;
                ]
                [
                  rdf:type sp:TriplePath ;
                  sp:object [
                      sp:varName "foi3" ;
                    ] ;
                  sp:path [
                      rdf:type sp:SeqPath ;
                      sp:path1 sosa:hasFeatureOfInterest ;
                      sp:path2 [
                          rdf:type sp:ModPath ;
                          sp:modMax -2 ;
                          sp:modMin 0 ;
                          sp:subPath sosa:isSampleOf ;
                        ] ;
                    ] ;
                  sp:subject [
                      sp:varName "oc" ;
                    ] ;
                ]
                [
                  rdf:type sp:NotExists ;
                  sp:elements (
                      [
                        sp:object [
                            sp:varName "y3" ;
                          ] ;
                        sp:predicate sosa:isSampleOf ;
                        sp:subject [
                            sp:varName "foi3" ;
                          ] ;
                      ]
                    ) ;
                ]
              ) ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:coalesce ;
                sp:arg1 [
                    sp:varName "foi1" ;
                  ] ;
                sp:arg2 [
                    sp:varName "foi2" ;
                  ] ;
                sp:arg3 [
                    sp:varName "foi3" ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "foi" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "op" ;
              ] ;
            sp:predicate sosa:observedProperty ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:observedProperty ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate sosa:hasMemberObservation ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "op" ;
              ] ;
            sp:predicate sosa:observedProperty ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "pr" ;
              ] ;
            sp:predicate sosa:usedProcedure ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:usedProcedure ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate sosa:hasMemberObservation ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "pr" ;
              ] ;
            sp:predicate sosa:usedProcedure ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "pt" ;
              ] ;
            sp:predicate sosa:phenomenonTime ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            sp:object spin:_this ;
            sp:predicate sosa:hasMemberObservation ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "pt" ;
              ] ;
            sp:predicate sosa:phenomenonTime ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:phenomenonTime ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "rt" ;
              ] ;
            sp:predicate sosa:resultTime ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:resultTime ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate sosa:hasMemberObservation ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "rt" ;
              ] ;
            sp:predicate sosa:resultTime ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "se" ;
              ] ;
            sp:predicate sosa:madeBySensor ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:madeBySensor ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            sp:object spin:_this ;
            sp:predicate sosa:hasMemberObservation ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "se" ;
              ] ;
            sp:predicate sosa:madeBySensor ;
            sp:subject [
                sp:varName "oc" ;
              ] ;
          ]
        ) ;
    ] ;
  rdfs:comment """If values are not provided for the following Observation properties, they may be provided by the ObservationCollection of which it is a member:
- hasFeatureOfInterest
- hasUltimateFeatureOfInterest
- madeBySensor
- observedProperty
- phenomenonTime
- resultTime
- usedProcedure
SPIN rules are provided that formalize this rule""" ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:minCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty sosa:hasUltimateFeatureOfInterest ;
    ] ;
.
sosa:ObservationCollection
  rdf:type owl:Class ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "f" ;
              ] ;
            sp:predicate sosa:hasUltimateFeatureOfInterest ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:hasUltimateFeatureOfInterest ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "f" ;
              ] ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 sosa:hasFeatureOfInterest ;
                sp:path2 [
                    rdf:type sp:ModPath ;
                    sp:modMax -2 ;
                    sp:modMin 0 ;
                    sp:subPath sosa:isSampleOf ;
                  ] ;
              ] ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "y" ;
                    ] ;
                  sp:predicate sosa:isSampleOf ;
                  sp:subject [
                      sp:varName "f" ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
    ] ;
  rdfs:comment "Collection of observations, typically with one or more property shared by all of its members" ;
  rdfs:label "Collection of observations" ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom xsd:dateTime ;
      owl:onProperty sosa:resultTime ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom time:TemporalEntity ;
      owl:onProperty sosa:phenomenonTime ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom sosa:FeatureOfInterest ;
      owl:onProperty sosa:hasFeatureOfInterest ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom sosa:FeatureOfInterest ;
      owl:onProperty sosa:hasUltimateFeatureOfInterest ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom sosa:ObservableProperty ;
      owl:onProperty sosa:observedProperty ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom sosa:Procedure ;
      owl:onProperty sosa:usedProcedure ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom sosa:Sensor ;
      owl:onProperty sosa:madeBySensor ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:minCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty sosa:hasMemberObservation ;
    ] ;
.
sosa:Sampling
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "f" ;
              ] ;
            sp:predicate sosa:hasUltimateFeatureOfInterest ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "x" ;
                    ] ;
                  sp:predicate sosa:hasUltimateFeatureOfInterest ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "f" ;
              ] ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 sosa:hasFeatureOfInterest ;
                sp:path2 [
                    rdf:type sp:ModPath ;
                    sp:modMax -2 ;
                    sp:modMin 0 ;
                    sp:subPath sosa:isSampleOf ;
                  ] ;
              ] ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "y" ;
                    ] ;
                  sp:predicate sosa:isSampleOf ;
                  sp:subject [
                      sp:varName "f" ;
                    ] ;
                ]
              ) ;
          ]
        ) ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:minCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty sosa:hasUltimateFeatureOfInterest ;
    ] ;
.
sosa:hasFeatureOfInterest
  schema:domainIncludes sosa:ObservationCollection ;
.
sosa:hasMemberObservation
  rdf:type owl:ObjectProperty ;
  schema:domainIncludes sosa:ObservationCollection ;
  schema:rangeIncludes sosa:Observation ;
  rdfs:comment "Link to a member of a collection of observations that share the same value for one or more of the characteristic properties" ;
  rdfs:domain sosa:ObservationCollection ;
  rdfs:label "member observation" ;
  rdfs:range sosa:Observation ;
  rdfs:subPropertyOf rdfs:member ;
.
sosa:hasUltimateFeatureOfInterest
  rdf:type owl:ObjectProperty ;
  schema:domainIncludes sosa:Actuation ;
  schema:domainIncludes sosa:Observation ;
  schema:domainIncludes sosa:Sampling ;
  schema:rangeIncludes sosa:FeatureOfInterest ;
  rdfs:comment "link to the ultimate feature of interest of an observation or act of sampling. This is useful when the proximate feature of interest is a sample of the ultimate feature of interest, directly or trasntitively." ;
  rdfs:comment """should match a property chain something like this but with sosa:isSampleOf* 
      owl:propertyChainAxiom ( sosa:hasFeatureOfInterest sosa:isSampleOf )""" ;
  rdfs:domain [
      rdf:type owl:Class ;
      owl:unionOf (
          sosa:Observation
          sosa:Sampling
          sosa:Actuation
        ) ;
    ] ;
  rdfs:label "has ultimate feature of interest" ;
  rdfs:range sosa:FeatureOfInterest ;
.
sosa:madeBySensor
  schema:domainIncludes sosa:ObservationCollection ;
.
sosa:observedProperty
  schema:domainIncludes sosa:ObservationCollection ;
.
sosa:phenomenonTime
  schema:domainIncludes sosa:ObservationCollection ;
.
sosa:resultTime
  schema:domainIncludes sosa:ObservationCollection ;
.
sosa:usedProcedure
  schema:domainIncludes sosa:ObservationCollection ;
.
<http://www.w3.org/ns/ssn-ext>
  rdf:type owl:Ontology ;
  dcterms:created "2018-03-08"^^xsd:date ;
  dcterms:creator <http://orcid.org/0000-0002-3884-3420> ;
  rdfs:comment "Some extensions to the SSN Ontology" ;
  rdfs:label "SSN extensions" ;
  owl:imports <http://spinrdf.org/spin> ;
  owl:imports <http://www.w3.org/2006/time> ;
  owl:imports ssn: ;
.
